//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HouseholdDataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AssessmentEntities : DbContext
    {
        public AssessmentEntities()
            : base("name=AssessmentEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FamilyMember> FamilyMembers { get; set; }
        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<Household> Households { get; set; }
        public virtual DbSet<HousingType> HousingTypes { get; set; }
        public virtual DbSet<MaritalStatu> MaritalStatus { get; set; }
        public virtual DbSet<OccupationType> OccupationTypes { get; set; }
        public virtual DbSet<VW_AllGenders> VW_AllGenders { get; set; }
        public virtual DbSet<VW_AllHouseholds> VW_AllHouseholds { get; set; }
        public virtual DbSet<VW_AllHousingTypes> VW_AllHousingTypes { get; set; }
        public virtual DbSet<VW_AllMaritalStatus> VW_AllMaritalStatus { get; set; }
        public virtual DbSet<VW_AllOccupationTypes> VW_AllOccupationTypes { get; set; }
    
        public virtual int SP_AddFamilyMemberToHousehold(Nullable<int> householdID, string name, Nullable<int> genderID, Nullable<int> maritalStatusID, Nullable<int> spouseID, Nullable<int> occupationTypeID, Nullable<decimal> annualIncome, Nullable<System.DateTime> dateOfBirth, ObjectParameter createdID, ObjectParameter success, ObjectParameter message)
        {
            var householdIDParameter = householdID.HasValue ?
                new ObjectParameter("HouseholdID", householdID) :
                new ObjectParameter("HouseholdID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var genderIDParameter = genderID.HasValue ?
                new ObjectParameter("GenderID", genderID) :
                new ObjectParameter("GenderID", typeof(int));
    
            var maritalStatusIDParameter = maritalStatusID.HasValue ?
                new ObjectParameter("MaritalStatusID", maritalStatusID) :
                new ObjectParameter("MaritalStatusID", typeof(int));
    
            var spouseIDParameter = spouseID.HasValue ?
                new ObjectParameter("SpouseID", spouseID) :
                new ObjectParameter("SpouseID", typeof(int));
    
            var occupationTypeIDParameter = occupationTypeID.HasValue ?
                new ObjectParameter("OccupationTypeID", occupationTypeID) :
                new ObjectParameter("OccupationTypeID", typeof(int));
    
            var annualIncomeParameter = annualIncome.HasValue ?
                new ObjectParameter("AnnualIncome", annualIncome) :
                new ObjectParameter("AnnualIncome", typeof(decimal));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddFamilyMemberToHousehold", householdIDParameter, nameParameter, genderIDParameter, maritalStatusIDParameter, spouseIDParameter, occupationTypeIDParameter, annualIncomeParameter, dateOfBirthParameter, createdID, success, message);
        }
    
        public virtual int SP_CreateHousehold(Nullable<int> housingTypeID, ObjectParameter createdID, ObjectParameter success)
        {
            var housingTypeIDParameter = housingTypeID.HasValue ?
                new ObjectParameter("HousingTypeID", housingTypeID) :
                new ObjectParameter("HousingTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CreateHousehold", housingTypeIDParameter, createdID, success);
        }
    
        public virtual int SP_GetBabySunshineGrant()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetBabySunshineGrant");
        }
    
        public virtual int SP_GetElderBonus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetElderBonus");
        }
    
        public virtual int SP_GetFamilyTogethernessScheme()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetFamilyTogethernessScheme");
        }
    
        public virtual ObjectResult<SP_GetHouseholdByID_Result> SP_GetHouseholdByID(Nullable<int> householdID)
        {
            var householdIDParameter = householdID.HasValue ?
                new ObjectParameter("HouseholdID", householdID) :
                new ObjectParameter("HouseholdID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetHouseholdByID_Result>("SP_GetHouseholdByID", householdIDParameter);
        }
    
        public virtual int SP_GetHouseholdMembersByAge(string age, Nullable<int> comparer, string householdList)
        {
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var comparerParameter = comparer.HasValue ?
                new ObjectParameter("Comparer", comparer) :
                new ObjectParameter("Comparer", typeof(int));
    
            var householdListParameter = householdList != null ?
                new ObjectParameter("HouseholdList", householdList) :
                new ObjectParameter("HouseholdList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetHouseholdMembersByAge", ageParameter, comparerParameter, householdListParameter);
        }
    
        public virtual int SP_GetStudentEncouragementBonus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetStudentEncouragementBonus");
        }
    
        public virtual ObjectResult<SP_GetYOLOGSTGrant_Result> SP_GetYOLOGSTGrant()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetYOLOGSTGrant_Result>("SP_GetYOLOGSTGrant");
        }
    }
}
